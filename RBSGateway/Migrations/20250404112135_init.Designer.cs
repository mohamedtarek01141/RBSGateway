// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RBSGateway.Data;

#nullable disable

namespace RBSGateway.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250404112135_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RBSGateway.Entities.Company", b =>
                {
                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<int>("TenantID")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("LastUpdateDate")
                        .HasColumnType("date");

                    b.Property<string>("LastUpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyID", "TenantID");

                    b.HasIndex("TenantID");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("RBSGateway.Entities.Resource", b =>
                {
                    b.Property<int>("ResourceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResourceID"));

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<int>("TenantID")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateOnly>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("LastUpdatedDate")
                        .HasColumnType("date");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<int>("ResourceNameId")
                        .HasColumnType("int");

                    b.Property<int?>("SectionID")
                        .HasColumnType("int");

                    b.Property<int?>("SectorID")
                        .HasColumnType("int");

                    b.Property<int?>("SiteID")
                        .HasColumnType("int");

                    b.HasKey("ResourceID", "CompanyID", "TenantID");

                    b.HasIndex("ResourceNameId");

                    b.HasIndex("TenantID");

                    b.HasIndex("CompanyID", "TenantID");

                    b.HasIndex("ParentID", "CompanyID", "TenantID");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("RBSGateway.Entities.ResourceName", b =>
                {
                    b.Property<int>("ResourceNameID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResourceNameID"));

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResourceNameID");

                    b.ToTable("ResourceNames");
                });

            modelBuilder.Entity("RBSGateway.Entities.Tenant", b =>
                {
                    b.Property<int>("TenantID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenantID"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TenantID");

                    b.ToTable("Tenant");
                });

            modelBuilder.Entity("RBSGateway.Entities.Company", b =>
                {
                    b.HasOne("RBSGateway.Entities.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("RBSGateway.Entities.Resource", b =>
                {
                    b.HasOne("RBSGateway.Entities.ResourceName", "ResourceName")
                        .WithMany()
                        .HasForeignKey("ResourceNameId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RBSGateway.Entities.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RBSGateway.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID", "TenantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RBSGateway.Entities.Resource", "Parent")
                        .WithMany("Items")
                        .HasForeignKey("ParentID", "CompanyID", "TenantID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Company");

                    b.Navigation("Parent");

                    b.Navigation("ResourceName");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("RBSGateway.Entities.Resource", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
